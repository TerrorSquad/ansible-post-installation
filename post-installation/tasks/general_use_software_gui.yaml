---
- name: Download and install RescueTime
  block:
    - name: Download RescueTime
      ansible.builtin.get_url:
        url: https://www.rescuetime.com/installers/rescuetime_current_amd64.deb
        dest: "{{ download_dir }}/rescuetime.deb"
        mode: "0644"

    - name: Install RescueTime
      ansible.builtin.apt:
        deb: "{{ download_dir }}/rescuetime.deb"

- name: Download and install Google Chrome
  block:
    - name: Download Google Chrome
      ansible.builtin.get_url:
        url: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        dest: "{{ download_dir }}/google-chrome-stable_current_amd64.deb"
        mode: "0644"

    - name: Install Google Chrome
      ansible.builtin.apt:
        deb: "{{ download_dir }}/google-chrome-stable_current_amd64.deb"

- name: Download and install Zoom
  block:
    - name: Download Zoom
      ansible.builtin.get_url:
        url: https://zoom.us/client/latest/zoom_amd64.deb
        dest: "{{ download_dir }}/zoom_amd64.deb"
        mode: "0644"

    - name: Install Zoom
      ansible.builtin.apt:
        deb: "{{ download_dir }}/zoom_amd64.deb"

- name: Download and install Viber
  block:
    - name: Download Viber
      ansible.builtin.get_url:
        url: https://download.cdn.viber.com/cdn/desktop/Linux/viber.deb
        dest: "{{ download_dir }}/viber.deb"
        mode: "0644"

    - name: Install Viber
      ansible.builtin.apt:
        deb: "{{ download_dir }}/viber.deb"

- name: Download and install Tixati
  block:
    - name: Download Tixati page
      ansible.builtin.get_url:
        url: https://www.tixati.com/download/linux.html
        dest: "{{ download_dir }}/tixati.html"
        mode: "0644"

    - name: Find out latest Tixati URL
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          grep  -oP "<a href=(.+amd64.deb)\">" "{{ download_dir }}/tixati.html" | grep -oP  "http.+amd64.deb"  | xargs wget -O "{{ download_dir }}/tixati.deb"
        executable: /bin/bash
      args:
        creates: "{{ download_dir }}/tixati.deb"

    - name: Install Tixati
      ansible.builtin.apt:
        deb: "{{ download_dir }}/tixati.deb"

- name: Download and install UnifiedRemote
  block:
    - name: Download UnifiedRemote
      ansible.builtin.get_url:
        url: https://www.unifiedremote.com/download/linux-x64-deb
        dest: "{{ download_dir }}/uremote.deb"
        mode: "0644"

    - name: Install UnifiedRemote
      ansible.builtin.apt:
        deb: "{{ download_dir }}/uremote.deb"

- name: Install apt apps - Variety, Flameshot, Bleachbit
  ansible.builtin.apt:
    name:
      - bleachbit
      - flameshot
      - httpie
      - ncdu
      - papirus-icon-theme
      - peco
      - thefuck
      - tlp
      - unzip
      - variety
      - vlc
      - redshift
      - redshift-gtk

- name: Download and install mailspring
  ansible.builtin.include_tasks: install_github_asset.yaml
  vars:
    github_repo: Foundry376/mailspring
    github_asset: mailspring
    type: deb

- name: Download and install ONLYOFFICE
  block:
    - name: Download ONLYOFFICE
      ansible.builtin.get_url:
        url: https://download.onlyoffice.com/install/desktop/editors/linux/onlyoffice-desktopeditors_amd64.deb
        dest: "{{ download_dir }}/onlyoffice-desktopeditors_amd64.deb"
        mode: "0644"

    - name: Install ONLYOFFICE
      ansible.builtin.apt:
        deb: "{{ download_dir }}/onlyoffice-desktopeditors_amd64.deb"
        force: true

- name: Install ModernCSV
  block:
    - name: Download ModernCSV
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          NAME=$(curl -fsSL https://www.moderncsv.com/download |  grep -oP "ModernCSV-Linux.+tar.gz")
          BASE_URL=https://www.moderncsv.com/
          URL_PATH="release/${NAME}"
          echo $BASE_URL$URL_PATH | xargs wget -O "{{ download_dir }}/moderncsv.tar.gz"
        executable: /bin/bash
      args:
        creates: "{{ download_dir }}/moderncsv.tar.gz"

    - name: Create directory for ModernCSV
      ansible.builtin.file:
        path: "{{ download_dir }}/moderncsv"
        state: directory
        mode: "0755"
        owner: "{{ username }}"

    - name: Extract ModernCSV
      ansible.builtin.unarchive:
        src: "{{ download_dir }}/moderncsv.tar.gz"
        dest: "{{ download_dir }}/moderncsv"
        remote_src: true
        creates: "{{ download_dir }}/moderncsv"

    - name: Install ModernCSV (assuming install.sh is executable)
      ansible.builtin.command:
        cmd: "cd $(ls) && bash ./install.sh"
        chdir: "{{ download_dir }}/moderncsv"
        creates: "/usr/local/bin/moderncsv"

- name: Copy RedShift configuration file
  ansible.builtin.copy:
    src: ./defaults/.config/redshift.conf
    dest: "{{ config_home }}"
    mode: "0644"
  become_user: "{{ username }}"
  become: true

- name: Download and install input-remapper
  ansible.builtin.include_tasks: install_github_asset.yaml
  vars:
    github_repo: sezanzeb/input-remapper
    github_asset: input-remapper
    type: deb
