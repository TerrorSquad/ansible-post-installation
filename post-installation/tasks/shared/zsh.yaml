---
- name: Install zsh (Linux)
  ansible.builtin.apt:
    name: zsh
  when: ansible_os_family == 'Debian'

- name: Install zsh (macOS)
  community.general.homebrew:
    name: zsh
    state: present
    path: "{{ homebrew_path }}"
  retries: 3
  when: ansible_os_family == 'Darwin'

- name: Save ZSH install location into a variable
  ansible.builtin.command: which zsh
  register: zsh_install_path
  changed_when: false

- name: Set ZSH as default login shell for current user
  ansible.builtin.user:
    name: "{{ username }}"
    shell: "{{ zsh_install_path.stdout | default('/bin/zsh', true) }}"
  register: shell_change_result
  failed_when: false
  ignore_errors: true

- name: Log shell change succeeded
  ansible.builtin.debug:
    msg: "Shell change succeeded - this is normal in CI environments"
  when: shell_change_result.changed

- name: Log shell change failed or skipped
  ansible.builtin.debug:
    msg: "Shell change failed or skipped - this is normal in CI environments"
  when: not shell_change_result.changed

- name: Initialize .zshrc
  ansible.builtin.copy:
    src: ./defaults/.zshrc
    dest: "{{ zshrc }}"
    mode: "0644"
  become_user: "{{ username }}"
  become: true

- name: Create ~/.zsh/aliases directory
  ansible.builtin.file:
    path: "{{ user_home }}/.zsh/aliases"
    state: directory
    mode: "0755"
  become_user: "{{ username }}"
  become: true

- name: Copy aliases files to ~/.zsh/aliases
  ansible.builtin.copy:
    src: ./defaults/.zsh/aliases
    dest: "{{ user_home }}/.zsh"
    mode: "0644"
  become_user: "{{ username }}"
  become: true

- name: Create functions directory
  ansible.builtin.file:
    path: "{{ user_home }}/.zsh/functions"
    state: directory
    mode: "0755"
  become_user: "{{ username }}"
  become: true

- name: Copy functions files to ~/.zsh/functions
  ansible.builtin.copy:
    src: "./defaults/.zsh/functions"
    dest: "{{ user_home }}/.zsh"
    mode: "0644"
    force: true
  become_user: "{{ username }}"
  become: true

- name: Create ~/.zsh/completions directory
  ansible.builtin.file:
    path: "{{ user_home }}/.zsh/completions"
    state: directory
    mode: "0755"
  become_user: "{{ username }}"
  become: true

- name: Copy completions files to ~/.zsh/completions
  ansible.builtin.copy:
    src: "./defaults/.zsh/completions"
    dest: "{{ user_home }}/.zsh"
    mode: "0644"
  become_user: "{{ username }}"
  become: true

- name: Copy .p10k.zsh
  ansible.builtin.copy:
    src: ./defaults/.p10k.zsh
    dest: "{{ user_home }}"
    mode: "0644"
  become_user: "{{ username }}"
  become: true

- name: Install antidote (ZSH plugin manager)
  block:
    - name: Delete existing antidote directory
      ansible.builtin.file:
        path: "{{ user_home }}/.antidote"
        state: absent
      become_user: "{{ username }}"
      become: true

    - name: Clone antidote repository
      ansible.builtin.git:
        repo: https://github.com/mattmc3/antidote.git
        dest: "{{ user_home }}/.antidote"
        depth: 1
        force: true
        version: v1.9.6
      become_user: "{{ username }}"
      become: true

- name: Configure antidote
  block:
    - name: Copy .zsh_plugins.sh
      ansible.builtin.copy:
        src: ./defaults/.zsh_plugins.sh
        dest: "{{ user_home }}/.zsh_plugins.sh"
        mode: "0644"
      become_user: "{{ username }}"
      become: true

    - name: Remove existing .zsh_plugins.zsh
      ansible.builtin.file:
        path: "{{ user_home }}/.zsh_plugins.zsh"
        state: absent

    - name: Download antidote bundles
      ansible.builtin.shell: |
        zsh -c "source {{ user_home }}/.antidote/antidote.zsh && antidote update"
      args:
        executable: "{{ zsh_install_path.stdout | default('/bin/zsh', true) }}"
      become_user: "{{ username }}"
      become: true
      register: antidote_update
      changed_when: antidote_update.rc == 0
