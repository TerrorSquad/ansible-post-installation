---
- name: Install git (Linux)
  ansible.builtin.apt:
    name:
      - git
  when: ansible_os_family == 'Debian'

- name: Install git (macOS)
  community.general.homebrew:
    name: git
    state: present
    path: "{{ homebrew_path }}"
  become_user: "{{ username }}"
  become: true
  retries: 3
  when: ansible_os_family == 'Darwin'

- name: Save current git name
  community.general.git_config_info:
    name: "user.name"
    scope: global
  become_user: "{{ username }}"
  become: true
  register: current_git_name
  ignore_errors: true

- name: Save current git email
  community.general.git_config_info:
    name: "user.email"
    scope: global
  become_user: "{{ username }}"
  become: true
  register: current_git_email
  ignore_errors: true

- name: Copy .gitconfig file
  ansible.builtin.copy:
    src: ./defaults/.gitconfig
    dest: "~"
    mode: "0644"
  become_user: "{{ username }}"
  become: true

# Restore git user data since copying the .gitconfig above will overwrite it
- name: Revert git user data
  block:
    - name: Revert old git user name
      community.general.git_config:
        name: "user.name"
        value: "{{ current_git_name.config_value }}"
        scope: global
      become_user: "{{ username }}"
      become: true
      when: current_git_name.config_value is defined

    - name: Revert old git user email
      community.general.git_config:
        name: "user.email"
        value: "{{ current_git_email.config_value }}"
        scope: global
      become_user: "{{ username }}"
      become: true
      when: current_git_email.config_value is defined

- name: Copy .git-templates-sample directory
  ansible.builtin.copy:
    src: ./defaults/.git-templates-sample
    dest: "~"
    mode: "0755"
  become_user: "{{ username }}"
  become: true

- name: Configure git user name
  when: git_user_name is defined
  community.general.git_config:
    name: "user.name"
    value: "{{ git_user_name }}"
    scope: global
    state: present
  become_user: "{{ username }}"
  become: true

- name: Configure git user email
  when: git_user_email is defined
  community.general.git_config:
    name: "user.email"
    value: "{{ git_user_email }}"
    scope: global
    state: present
  become_user: "{{ username }}"
  become: true
