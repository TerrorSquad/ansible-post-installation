---
- name: Install apt apps
  ansible.builtin.apt:
    name:
      - guake
      - terminator
      - kcachegrind
      - graphviz

- name: Download and install GitKraken
  ansible.builtin.include_tasks: utils/install_remote_deb.yaml
  vars:
    remote_software_name: GitKraken
    remote_software_url: https://release.axocdn.com/linux/gitkraken-amd64.deb

- name: Download and install DBeaver
  ansible.builtin.include_tasks: utils/install_remote_deb.yaml
  vars:
    remote_software_name: DBeaver
    remote_software_url: https://dbeaver.io/files/dbeaver-ce_latest_amd64.deb

- name: Download and install Slack
  block:
    - name: Download Slack page
      ansible.builtin.get_url:
        url: https://slack.com/downloads/instructions/linux?build=deb
        dest: "{{ download_dir }}/slack.html"
        mode: "0644"

    - name: Find out latest Slack URL
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          grep -oP "https://downloads.*?\.deb" "{{ download_dir }}/slack.html" | head -n 1
        executable: /usr/bin/bash
      register: slack_url_result
      changed_when: slack_url_result.rc == 0

    - name: Install Slack
      ansible.builtin.include_tasks: utils/install_remote_deb.yaml
      vars:
        remote_software_name: Slack
        remote_software_url: "{{ slack_url_result.stdout }}"

- name: Create Terminator config directory path
  ansible.builtin.file:
    dest: "{{ terminator_config_dir }}"
    state: directory
    mode: "0775"
  become_user: "{{ username }}"
  become: true

- name: Configure Terminator
  ansible.builtin.copy:
    src: ./defaults/.config/terminator/config
    dest: "{{ terminator_config_file }}"
    mode: "0644"
  become_user: "{{ username }}"
  become: true

- name: Download and install JetBrains ToolBox
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      curl -fsSL https://raw.githubusercontent.com/terrorsquad/jetbrains-toolbox-install/master/jetbrains-toolbox.sh | zsh
    executable: /usr/bin/bash
  become_user: "{{ username }}"
  become: true
  register: jetbrains_toolbox_installed
  changed_when: jetbrains_toolbox_installed.rc == 0

- name: Download and install Visual Studio Code
  when: '"microsoft" not in ansible_facts["kernel"]'
  block:
    - name: Download and install Visual Studio Code
      ansible.builtin.include_tasks: utils/install_remote_deb.yaml
      vars:
        remote_software_name: Visual Studio Code
        remote_software_url: https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64

- name: Install Postman
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      curl https://gist.githubusercontent.com/SanderTheDragon/1331397932abaa1d6fbbf63baed5f043/raw/postman-deb.sh | zsh
    chdir: "{{ download_dir }}"
    executable: /usr/bin/bash
  become_user: "{{ username }}"
  become: true
  register: postman_installed
  changed_when: postman_installed.rc == 0

- name: Sublime text
  block:
    - name: Install the GPG key
      ansible.builtin.apt_key:
        url: https://download.sublimetext.com/sublimehq-pub.gpg

    - name: Add Sublime Text apt repository
      ansible.builtin.apt_repository:
        repo: "deb https://download.sublimetext.com/ apt/stable/"
        filename: sublime-text
        state: present
        update_cache: true

    - name: Install dependencies
      ansible.builtin.apt:
        name:
          - ca-certificates
          - apt-transport-https
        state: present
        update_cache: true

    - name: Add sublime text
      ansible.builtin.apt:
        update_cache: true
        name:
          - sublime-text

- name: Install Zed editor
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      curl -f https://zed.dev/install.sh | sh
    executable: /usr/bin/bash
  become_user: "{{ username }}"
  become: false
  register: zed_installed
  changed_when: zed_installed.rc == 0
  ignore_errors: true

- name: Download and install DevToys
  ansible.builtin.include_tasks: utils/install_remote_deb.yaml
  vars:
    remote_software_name: DevToys
    remote_software_url: https://github.com/DevToys-app/DevToys/releases/download/v2.0.4.0/devtoys_linux_x64.deb
